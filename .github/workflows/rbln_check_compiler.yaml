name: Check Rebel Compiler Version

on:
  workflow_call:
    inputs:
      compiler_version:
        description: "Rebel compiler version to check"
        required: true
        type: string
    outputs:
      compiler_version_check:
        description: "Whether the compiler is a deploy version"
        value: ${{ jobs.check-rebel-compiler-version.outputs.compiler_version_check }}
      compiler_version:
        description: "The compiler version used"
        value: ${{ jobs.check-rebel-compiler-version.outputs.compiler_version }}

jobs:
  check-rebel-compiler-version:
    runs-on: rebel-k8s-runner
    outputs:
      compiler_version_check: ${{ steps.final_check.outputs.COMPILER_VERSION_CHECK }}
      compiler_version: ${{ steps.install_compiler.outputs.COMPILER_VERSION }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install rebel-compiler
        id: install_compiler
        env:
          REBEL_PYPI_ENDPOINT: ${{ vars.REBEL_PYPI_INTERNAL_ENDPOINT }}
          REBEL_PYPI_USERNAME: ${{ secrets.REBEL_PYPI_USERNAME }}
          REBEL_PYPI_PASSWORD: ${{ secrets.REBEL_PYPI_PASSWORD }}
        run: |
          set -e
          PYPI_URL=$(echo $REBEL_PYPI_ENDPOINT | sed "s/\/\//\0$REBEL_PYPI_USERNAME:$REBEL_PYPI_PASSWORD@/")
          pip3 install --extra-index-url $PYPI_URL rebel-compiler==${{ inputs.compiler_version }}
          echo "COMPILER_VERSION=${{ inputs.compiler_version }}" >> $GITHUB_OUTPUT

      - name: Run script to check ENV
        id: check_env
        run: |
          echo "Running check for rebel-compiler version"
          ENV_VALUE=$(python3 -c '${{ secrets.CHECK_DEPLOY }}')
          echo $ENV_VALUE
          echo "ENV_VALUE=$ENV_VALUE" >> $GITHUB_ENV

      - name: Verify ENV is PROD
        id: check_prod
        run: |
          if [ "$ENV_VALUE" = "PROD" ]; then
            echo "IS_PROD=true" >> $GITHUB_ENV
            echo "version check pass(✅)!!"
          else
            echo "IS_PROD=false" >> $GITHUB_ENV
            echo "version check fail(❌)!!" 
            echo "rebel-compiler must be prod version"
          fi 

      - name: Check pyarmor
        id: check_pyarmor
        run: |
          if pip3 show -f rebel-compiler | grep -Ei 'pytransform|pyarmor_runtime|__pyarmor__|license\.lic'; then
            echo "PYARMOR_ENC=true" >> $GITHUB_ENV
            echo "pyarmor check pass(✅)!!"
          else
            echo "PYARMOR_ENC=false" >> $GITHUB_ENV
            echo "pyarmor check fail(❌)!!"
          fi

      - name: Final verification
        id: final_check
        run: |
          echo "IS_PROD=$IS_PROD"
          echo "PYARMOR_ENC=$PYARMOR_ENC"
          if [ "$IS_PROD" = "true" ] && [ "$PYARMOR_ENC" = "true" ]; then
            echo "COMPILER_VERSION_CHECK=true" >> $GITHUB_OUTPUT
            echo "Final check pass(✅)!!"
          else
            echo "COMPILER_VERSION_CHECK=false" >> $GITHUB_OUTPUT
            echo "Final check fail(❌)!! Both IS_PROD and PYARMOR_ENC must be true."
            exit 1
          fi